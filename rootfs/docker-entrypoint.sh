#!/bin/sh

export _GW=$(netstat -nr | grep '^0\.0\.0\.0' | awk '{print $2}')

echo "# Generated by $0" > /etc/apache2/rewrite-env-rules.conf

printenv | grep '^REWRITE_' | sort -fibn -t'_' -k2 | while read -r rule; do
    set -f
    ruleid=$(echo $rule | cut -f1 -d'=')
    rule=$(echo $rule | cut -f2- -d'=')
    src=$(echo $rule | cut -s -f2- -d' ')
    dst=$(echo $rule | cut -s -f1 -d' ')

    if [ -z "$src" ] || [ -z "$dst" ]; then continue; fi

    echo "
    # ${ruleid##*_} TO: $dst FROM: $src" >> /etc/apache2/rewrite-env-rules.conf
    if [[ $dst =~ '^\w+://.+' ]]; then
        # Handle custom protocol
        echo "
        RewriteCond %{HTTP_HOST} \"^$src(?::\d+)?\$\"
        RewriteRule .* \"$dst%{REQUEST_URI}\" [P,QSA,L]" >> /etc/apache2/rewrite-env-rules.conf
    else
        # Handle http/ws by default
        echo "
        RewriteCond %{HTTP:Connection} Upgrade [NC]
        RewriteCond %{HTTP:Upgrade} websocket [NC]
        RewriteCond %{HTTP_HOST} \"^$src(?::\d+)?\$\" [NC]
        RewriteRule .* \"ws://$dst%{REQUEST_URI}\" [P,QSA,L]
        RewriteCond %{HTTP_HOST} \"^$src(?::\d+)?\$\" [NC]
        RewriteRule .* \"http://$dst%{REQUEST_URI}\" [P,QSA,L]" >> /etc/apache2/rewrite-env-rules.conf
    fi
done

HTTPD_ARGS=""

if [ -n "$SERVER_STATUS_ENDPOINT" ]; then
    HTTPD_ARGS="$HTTPD_ARGS -DSERVER_STATUS_ENDPOINT"
fi

if [ -n "$SERVER_INFO_ENDPOINT" ]; then
    HTTPD_ARGS="$HTTPD_ARGS -DSERVER_INFO_ENDPOINT"
fi

if [ "$ENABLE_HTTP2" == "1" ] || [ "$ENABLE_HTTP2" == "true" ] || [ "$ENABLE_HTTP2" == "on" ]; then
    HTTPD_ARGS="$HTTPD_ARGS -DENABLE_HTTP2"
fi

if [ "$ENABLE_JSON_LOG" == "1" ] || [ "$ENABLE_JSON_LOG" == "true" ] || [ "$ENABLE_JSON_LOG" == "on" ]; then
    HTTPD_ARGS="$HTTPD_ARGS -DENABLE_JSON_LOG"
fi

rm -f /usr/local/apache2/logs/httpd.pid
exec httpd -DFOREGROUND $HTTPD_ARGS -f /etc/apache2/httpd.conf
